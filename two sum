class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
      for i in range(len(nums)):
        for j in range(i+1,len(nums)):
            sum==num[i]+num[j]:
            if sum==target:   
               return [i,j]
        
    
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        memory = {}
        for i, e in enumerate(nums):
            if e in memory: return (memory[e], i)
            memory[(target - e)] = i
        return []
        
        
class Solution:
   def twoSum(self, nums: List[int], target: int) -> List[int]:
       lookup = {}
       for index, item in enumerate(nums):
           if(target - item) in lookup:
               return [lookup[target-item],index]
           else:
               lookup[item] = index
